syntax = "proto3";
option java_multiple_files = true;

package online.gonlink;
import "common.proto";

// === Constant ===
message DataClient{
  string name = 1;
  int64 data = 2;
}

// === GeneralTraffics ===
message GeneralTrafficsSearchRequest{
  optional int32 page = 1;
  optional int32 size = 2;
  optional string sortDirection = 3;

  string zoneId = 4;
}

message PageInfo {
  int32 currentPage = 1;
  int32 totalPages = 2;
  int64 totalElements = 3;
  int32 pageSize = 4;
}

message GeneralTraffic{
  string shortCode = 1;
  string originalUrl = 2;
  string trafficDate = 3;
  int64 traffic = 4;

  bool active = 5;
  string alias = 6;
  string desc = 7;
  string timeExpired = 8;
  bool isUsingPassword = 9;
  int64 maxUsage = 10;
}

message GeneralTrafficsSearchResponse{
  repeated GeneralTraffic generalTraffic = 1;
  PageInfo pageInfo = 2;
}

// === MonthTraffics ===
message MonthTrafficsGetAllRequest{
  string shortCode = 1;

  string zoneId = 2;
}

message MonthTrafficGetAllResponse{
  repeated DataClient trafficData = 1;
}

// === DayTraffics ===
message DayTrafficInRangeRequest{
  string shortCode = 1;
  string fromDate = 2;
  string toDate = 3;
  string zoneId = 4;
}

message DayTrafficInRangeResponse{
  repeated DataClient trafficData = 1;
  repeated DataClient cities = 2;
  repeated DataClient countries = 3;
  repeated DataClient zoneIds = 4;
  repeated DataClient browsers = 5;
  repeated DataClient browserVersions = 6;
  repeated DataClient operatingSystems = 7;
  repeated DataClient deviceTypes = 8;
}

// === RealTimeTraffics ===
message RealTimeTrafficRequest{
  string shortCode = 1;
  string zoneId = 2;
}

message RealTimeTrafficResponse{
  repeated int32 data = 1;
}

// === RealTimeTrafficsAccount ===
message RealTimeTrafficAccountRequest{
  string zoneId = 1;
}

message RealTimeTrafficAccountResponse{
  repeated int32 data = 1;
  repeated GeneralTraffic generalTraffics = 2;
}

service Traffic {
  rpc searchGeneralTraffics(GeneralTrafficsSearchRequest) returns(online.gonlink.BaseGrpc){}
  rpc getAllMonthTraffics(MonthTrafficsGetAllRequest) returns(online.gonlink.BaseGrpc){}
  rpc getDayTrafficInRange(DayTrafficInRangeRequest) returns(online.gonlink.BaseGrpc){}
  rpc getRealTimeTraffic(RealTimeTrafficRequest) returns(online.gonlink.BaseGrpc){}
  rpc getRealTimeTrafficAccount(RealTimeTrafficAccountRequest) returns(online.gonlink.BaseGrpc){}
}

