// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: url-shortener-service.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// === GenerateShortCode ===
type GenerateShortCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalUrl string  `protobuf:"bytes,1,opt,name=originalUrl,proto3" json:"originalUrl,omitempty"`
	TrafficDate string  `protobuf:"bytes,2,opt,name=trafficDate,proto3" json:"trafficDate,omitempty"`
	ZoneId      string  `protobuf:"bytes,3,opt,name=zoneId,proto3" json:"zoneId,omitempty"`
	ShortCode   *string `protobuf:"bytes,4,opt,name=shortCode,proto3,oneof" json:"shortCode,omitempty"`
	Alias       *string `protobuf:"bytes,5,opt,name=alias,proto3,oneof" json:"alias,omitempty"`
	Desc        *string `protobuf:"bytes,6,opt,name=desc,proto3,oneof" json:"desc,omitempty"`
	TimeExpired *string `protobuf:"bytes,7,opt,name=timeExpired,proto3,oneof" json:"timeExpired,omitempty"`
	Password    *string `protobuf:"bytes,8,opt,name=password,proto3,oneof" json:"password,omitempty"`
	MaxUsage    *int64  `protobuf:"varint,9,opt,name=maxUsage,proto3,oneof" json:"maxUsage,omitempty"`
}

func (x *GenerateShortCodeRequest) Reset() {
	*x = GenerateShortCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateShortCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateShortCodeRequest) ProtoMessage() {}

func (x *GenerateShortCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateShortCodeRequest.ProtoReflect.Descriptor instead.
func (*GenerateShortCodeRequest) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateShortCodeRequest) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

func (x *GenerateShortCodeRequest) GetTrafficDate() string {
	if x != nil {
		return x.TrafficDate
	}
	return ""
}

func (x *GenerateShortCodeRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *GenerateShortCodeRequest) GetShortCode() string {
	if x != nil && x.ShortCode != nil {
		return *x.ShortCode
	}
	return ""
}

func (x *GenerateShortCodeRequest) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *GenerateShortCodeRequest) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *GenerateShortCodeRequest) GetTimeExpired() string {
	if x != nil && x.TimeExpired != nil {
		return *x.TimeExpired
	}
	return ""
}

func (x *GenerateShortCodeRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *GenerateShortCodeRequest) GetMaxUsage() int64 {
	if x != nil && x.MaxUsage != nil {
		return *x.MaxUsage
	}
	return 0
}

type GenerateShortCodeAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalUrl string  `protobuf:"bytes,1,opt,name=originalUrl,proto3" json:"originalUrl,omitempty"`
	TrafficDate string  `protobuf:"bytes,2,opt,name=trafficDate,proto3" json:"trafficDate,omitempty"`
	ZoneId      string  `protobuf:"bytes,3,opt,name=zoneId,proto3" json:"zoneId,omitempty"`
	ShortCode   *string `protobuf:"bytes,4,opt,name=shortCode,proto3,oneof" json:"shortCode,omitempty"`
	Alias       *string `protobuf:"bytes,5,opt,name=alias,proto3,oneof" json:"alias,omitempty"`
	Desc        *string `protobuf:"bytes,6,opt,name=desc,proto3,oneof" json:"desc,omitempty"`
	TimeExpired *string `protobuf:"bytes,7,opt,name=timeExpired,proto3,oneof" json:"timeExpired,omitempty"`
	Password    *string `protobuf:"bytes,8,opt,name=password,proto3,oneof" json:"password,omitempty"`
	MaxUsage    *int64  `protobuf:"varint,9,opt,name=maxUsage,proto3,oneof" json:"maxUsage,omitempty"`
}

func (x *GenerateShortCodeAccountRequest) Reset() {
	*x = GenerateShortCodeAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateShortCodeAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateShortCodeAccountRequest) ProtoMessage() {}

func (x *GenerateShortCodeAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateShortCodeAccountRequest.ProtoReflect.Descriptor instead.
func (*GenerateShortCodeAccountRequest) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateShortCodeAccountRequest) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

func (x *GenerateShortCodeAccountRequest) GetTrafficDate() string {
	if x != nil {
		return x.TrafficDate
	}
	return ""
}

func (x *GenerateShortCodeAccountRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *GenerateShortCodeAccountRequest) GetShortCode() string {
	if x != nil && x.ShortCode != nil {
		return *x.ShortCode
	}
	return ""
}

func (x *GenerateShortCodeAccountRequest) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *GenerateShortCodeAccountRequest) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *GenerateShortCodeAccountRequest) GetTimeExpired() string {
	if x != nil && x.TimeExpired != nil {
		return *x.TimeExpired
	}
	return ""
}

func (x *GenerateShortCodeAccountRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *GenerateShortCodeAccountRequest) GetMaxUsage() int64 {
	if x != nil && x.MaxUsage != nil {
		return *x.MaxUsage
	}
	return 0
}

type GenerateShortCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCode   string `protobuf:"bytes,1,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
	Base64Image string `protobuf:"bytes,2,opt,name=base64Image,proto3" json:"base64Image,omitempty"`
	IsOwner     bool   `protobuf:"varint,3,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
}

func (x *GenerateShortCodeResponse) Reset() {
	*x = GenerateShortCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateShortCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateShortCodeResponse) ProtoMessage() {}

func (x *GenerateShortCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateShortCodeResponse.ProtoReflect.Descriptor instead.
func (*GenerateShortCodeResponse) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateShortCodeResponse) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *GenerateShortCodeResponse) GetBase64Image() string {
	if x != nil {
		return x.Base64Image
	}
	return ""
}

func (x *GenerateShortCodeResponse) GetIsOwner() bool {
	if x != nil {
		return x.IsOwner
	}
	return false
}

// === checkExistShortCode ===
type ShortCodeCheckExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCode string `protobuf:"bytes,1,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
}

func (x *ShortCodeCheckExistRequest) Reset() {
	*x = ShortCodeCheckExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortCodeCheckExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortCodeCheckExistRequest) ProtoMessage() {}

func (x *ShortCodeCheckExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortCodeCheckExistRequest.ProtoReflect.Descriptor instead.
func (*ShortCodeCheckExistRequest) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{3}
}

func (x *ShortCodeCheckExistRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

type ShortCodeCheckExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExistShortCode bool `protobuf:"varint,1,opt,name=isExistShortCode,proto3" json:"isExistShortCode,omitempty"`
}

func (x *ShortCodeCheckExistResponse) Reset() {
	*x = ShortCodeCheckExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortCodeCheckExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortCodeCheckExistResponse) ProtoMessage() {}

func (x *ShortCodeCheckExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortCodeCheckExistResponse.ProtoReflect.Descriptor instead.
func (*ShortCodeCheckExistResponse) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{4}
}

func (x *ShortCodeCheckExistResponse) GetIsExistShortCode() bool {
	if x != nil {
		return x.IsExistShortCode
	}
	return false
}

// === checkNeedPassword ===
type OriginalUrlCheckNeedPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCode string `protobuf:"bytes,1,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
}

func (x *OriginalUrlCheckNeedPasswordRequest) Reset() {
	*x = OriginalUrlCheckNeedPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginalUrlCheckNeedPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalUrlCheckNeedPasswordRequest) ProtoMessage() {}

func (x *OriginalUrlCheckNeedPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginalUrlCheckNeedPasswordRequest.ProtoReflect.Descriptor instead.
func (*OriginalUrlCheckNeedPasswordRequest) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{5}
}

func (x *OriginalUrlCheckNeedPasswordRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

type OriginalUrlCheckNeedPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsNeedPassword bool `protobuf:"varint,1,opt,name=isNeedPassword,proto3" json:"isNeedPassword,omitempty"`
}

func (x *OriginalUrlCheckNeedPasswordResponse) Reset() {
	*x = OriginalUrlCheckNeedPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginalUrlCheckNeedPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalUrlCheckNeedPasswordResponse) ProtoMessage() {}

func (x *OriginalUrlCheckNeedPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginalUrlCheckNeedPasswordResponse.ProtoReflect.Descriptor instead.
func (*OriginalUrlCheckNeedPasswordResponse) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{6}
}

func (x *OriginalUrlCheckNeedPasswordResponse) GetIsNeedPassword() bool {
	if x != nil {
		return x.IsNeedPassword
	}
	return false
}

// === GetOriginalUrl ===
type GetOriginalUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCode          string  `protobuf:"bytes,1,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
	ClientTime         string  `protobuf:"bytes,2,opt,name=clientTime,proto3" json:"clientTime,omitempty"`
	ZoneId             string  `protobuf:"bytes,3,opt,name=zoneId,proto3" json:"zoneId,omitempty"`
	Password           *string `protobuf:"bytes,4,opt,name=password,proto3,oneof" json:"password,omitempty"`
	City               *string `protobuf:"bytes,5,opt,name=city,proto3,oneof" json:"city,omitempty"`
	Country            *string `protobuf:"bytes,6,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Timezone           *string `protobuf:"bytes,7,opt,name=timezone,proto3,oneof" json:"timezone,omitempty"`
	Browser            *string `protobuf:"bytes,8,opt,name=browser,proto3,oneof" json:"browser,omitempty"`
	BrowserVersion     *string `protobuf:"bytes,9,opt,name=browserVersion,proto3,oneof" json:"browserVersion,omitempty"`
	OperatingSystem    *string `protobuf:"bytes,10,opt,name=operatingSystem,proto3,oneof" json:"operatingSystem,omitempty"`
	OsVersion          *string `protobuf:"bytes,11,opt,name=osVersion,proto3,oneof" json:"osVersion,omitempty"`
	DeviceType         *string `protobuf:"bytes,12,opt,name=deviceType,proto3,oneof" json:"deviceType,omitempty"`
	DeviceManufacturer *string `protobuf:"bytes,13,opt,name=deviceManufacturer,proto3,oneof" json:"deviceManufacturer,omitempty"`
	DeviceName         *string `protobuf:"bytes,14,opt,name=deviceName,proto3,oneof" json:"deviceName,omitempty"`
}

func (x *GetOriginalUrlRequest) Reset() {
	*x = GetOriginalUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOriginalUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginalUrlRequest) ProtoMessage() {}

func (x *GetOriginalUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginalUrlRequest.ProtoReflect.Descriptor instead.
func (*GetOriginalUrlRequest) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetOriginalUrlRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetClientTime() string {
	if x != nil {
		return x.ClientTime
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetBrowser() string {
	if x != nil && x.Browser != nil {
		return *x.Browser
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetBrowserVersion() string {
	if x != nil && x.BrowserVersion != nil {
		return *x.BrowserVersion
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetOperatingSystem() string {
	if x != nil && x.OperatingSystem != nil {
		return *x.OperatingSystem
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetDeviceManufacturer() string {
	if x != nil && x.DeviceManufacturer != nil {
		return *x.DeviceManufacturer
	}
	return ""
}

func (x *GetOriginalUrlRequest) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

type GetOriginalUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalUrl string `protobuf:"bytes,1,opt,name=originalUrl,proto3" json:"originalUrl,omitempty"`
}

func (x *GetOriginalUrlResponse) Reset() {
	*x = GetOriginalUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOriginalUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginalUrlResponse) ProtoMessage() {}

func (x *GetOriginalUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginalUrlResponse.ProtoReflect.Descriptor instead.
func (*GetOriginalUrlResponse) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetOriginalUrlResponse) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

// === RemoveUrl ===
type RemoveUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCode string `protobuf:"bytes,1,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
}

func (x *RemoveUrlRequest) Reset() {
	*x = RemoveUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUrlRequest) ProtoMessage() {}

func (x *RemoveUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUrlRequest.ProtoReflect.Descriptor instead.
func (*RemoveUrlRequest) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveUrlRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

type RemoveUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRemoved bool `protobuf:"varint,1,opt,name=isRemoved,proto3" json:"isRemoved,omitempty"`
}

func (x *RemoveUrlResponse) Reset() {
	*x = RemoveUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUrlResponse) ProtoMessage() {}

func (x *RemoveUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUrlResponse.ProtoReflect.Descriptor instead.
func (*RemoveUrlResponse) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveUrlResponse) GetIsRemoved() bool {
	if x != nil {
		return x.IsRemoved
	}
	return false
}

// === ShortCodeUpdate ===
type ShortCodeUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCode   string  `protobuf:"bytes,1,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
	ZoneId      string  `protobuf:"bytes,2,opt,name=zoneId,proto3" json:"zoneId,omitempty"`
	Alias       *string `protobuf:"bytes,3,opt,name=alias,proto3,oneof" json:"alias,omitempty"`
	Desc        *string `protobuf:"bytes,4,opt,name=desc,proto3,oneof" json:"desc,omitempty"`
	TimeExpired *string `protobuf:"bytes,5,opt,name=timeExpired,proto3,oneof" json:"timeExpired,omitempty"`
	Password    *string `protobuf:"bytes,6,opt,name=password,proto3,oneof" json:"password,omitempty"`
	MaxUsage    *int64  `protobuf:"varint,7,opt,name=maxUsage,proto3,oneof" json:"maxUsage,omitempty"`
	Active      *bool   `protobuf:"varint,8,opt,name=active,proto3,oneof" json:"active,omitempty"`
}

func (x *ShortCodeUpdateRequest) Reset() {
	*x = ShortCodeUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortCodeUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortCodeUpdateRequest) ProtoMessage() {}

func (x *ShortCodeUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortCodeUpdateRequest.ProtoReflect.Descriptor instead.
func (*ShortCodeUpdateRequest) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{11}
}

func (x *ShortCodeUpdateRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ShortCodeUpdateRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ShortCodeUpdateRequest) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *ShortCodeUpdateRequest) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *ShortCodeUpdateRequest) GetTimeExpired() string {
	if x != nil && x.TimeExpired != nil {
		return *x.TimeExpired
	}
	return ""
}

func (x *ShortCodeUpdateRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *ShortCodeUpdateRequest) GetMaxUsage() int64 {
	if x != nil && x.MaxUsage != nil {
		return *x.MaxUsage
	}
	return 0
}

func (x *ShortCodeUpdateRequest) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

type ShortCodeUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortCode   string `protobuf:"bytes,1,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
	OriginalUrl string `protobuf:"bytes,2,opt,name=originalUrl,proto3" json:"originalUrl,omitempty"`
	Alias       string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Desc        string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	TimeExpired string `protobuf:"bytes,5,opt,name=timeExpired,proto3" json:"timeExpired,omitempty"`
	Password    string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	MaxUsage    int64  `protobuf:"varint,7,opt,name=maxUsage,proto3" json:"maxUsage,omitempty"`
	Active      bool   `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *ShortCodeUpdateResponse) Reset() {
	*x = ShortCodeUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_shortener_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortCodeUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortCodeUpdateResponse) ProtoMessage() {}

func (x *ShortCodeUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_shortener_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortCodeUpdateResponse.ProtoReflect.Descriptor instead.
func (*ShortCodeUpdateResponse) Descriptor() ([]byte, []int) {
	return file_url_shortener_service_proto_rawDescGZIP(), []int{12}
}

func (x *ShortCodeUpdateResponse) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ShortCodeUpdateResponse) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

func (x *ShortCodeUpdateResponse) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *ShortCodeUpdateResponse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ShortCodeUpdateResponse) GetTimeExpired() string {
	if x != nil {
		return x.TimeExpired
	}
	return ""
}

func (x *ShortCodeUpdateResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ShortCodeUpdateResponse) GetMaxUsage() int64 {
	if x != nil {
		return x.MaxUsage
	}
	return 0
}

func (x *ShortCodeUpdateResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

var File_url_shortener_service_proto protoreflect.FileDescriptor

var file_url_shortener_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x75, 0x72, 0x6c, 0x2d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x03, 0x0a, 0x18, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f,
	0x6e, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x88, 0x03,
	0x0a, 0x1f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x75, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22,
	0x3a, 0x0a, 0x1a, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x49, 0x0a, 0x1b, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x23, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x55, 0x72, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x24, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e,
	0x65, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4e,
	0x65, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa9, 0x05, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0a, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x55, 0x72, 0x6c, 0x22, 0x30, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0xd0, 0x02, 0x0a, 0x16, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x17,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x32, 0xa9, 0x07, 0x0a, 0x0c, 0x55, 0x72, 0x6c, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x12, 0x8f, 0x01, 0x0a, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x2e, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x47, 0x72,
	0x70, 0x63, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x2f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x2d, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2d, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x1f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x4e, 0x65, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x33, 0x2e, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x65, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x47, 0x72, 0x70, 0x63, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2d, 0x6e, 0x65, 0x65,
	0x64, 0x2d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x78, 0x0a, 0x11, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x47,
	0x72, 0x70, 0x63, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x18, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2f, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x47, 0x72, 0x70, 0x63, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2d, 0x67, 0x65, 0x6e, 0x12, 0x72, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x47, 0x72, 0x70, 0x63, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x65, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x70, 0x0a, 0x0a, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x47,
	0x72, 0x70, 0x63, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2d, 0x75, 0x72, 0x6c, 0x12, 0x72, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x47, 0x72, 0x70, 0x63, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x18, 0x5a, 0x16, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_url_shortener_service_proto_rawDescOnce sync.Once
	file_url_shortener_service_proto_rawDescData = file_url_shortener_service_proto_rawDesc
)

func file_url_shortener_service_proto_rawDescGZIP() []byte {
	file_url_shortener_service_proto_rawDescOnce.Do(func() {
		file_url_shortener_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_url_shortener_service_proto_rawDescData)
	})
	return file_url_shortener_service_proto_rawDescData
}

var file_url_shortener_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_url_shortener_service_proto_goTypes = []any{
	(*GenerateShortCodeRequest)(nil),             // 0: online.gonlink.GenerateShortCodeRequest
	(*GenerateShortCodeAccountRequest)(nil),      // 1: online.gonlink.GenerateShortCodeAccountRequest
	(*GenerateShortCodeResponse)(nil),            // 2: online.gonlink.GenerateShortCodeResponse
	(*ShortCodeCheckExistRequest)(nil),           // 3: online.gonlink.ShortCodeCheckExistRequest
	(*ShortCodeCheckExistResponse)(nil),          // 4: online.gonlink.ShortCodeCheckExistResponse
	(*OriginalUrlCheckNeedPasswordRequest)(nil),  // 5: online.gonlink.OriginalUrlCheckNeedPasswordRequest
	(*OriginalUrlCheckNeedPasswordResponse)(nil), // 6: online.gonlink.OriginalUrlCheckNeedPasswordResponse
	(*GetOriginalUrlRequest)(nil),                // 7: online.gonlink.GetOriginalUrlRequest
	(*GetOriginalUrlResponse)(nil),               // 8: online.gonlink.GetOriginalUrlResponse
	(*RemoveUrlRequest)(nil),                     // 9: online.gonlink.RemoveUrlRequest
	(*RemoveUrlResponse)(nil),                    // 10: online.gonlink.RemoveUrlResponse
	(*ShortCodeUpdateRequest)(nil),               // 11: online.gonlink.ShortCodeUpdateRequest
	(*ShortCodeUpdateResponse)(nil),              // 12: online.gonlink.ShortCodeUpdateResponse
	(*BaseGrpc)(nil),                             // 13: online.gonlink.BaseGrpc
}
var file_url_shortener_service_proto_depIdxs = []int32{
	3,  // 0: online.gonlink.UrlShortener.checkExistShortCode:input_type -> online.gonlink.ShortCodeCheckExistRequest
	5,  // 1: online.gonlink.UrlShortener.checkNeedPasswordGetOriginalUrl:input_type -> online.gonlink.OriginalUrlCheckNeedPasswordRequest
	0,  // 2: online.gonlink.UrlShortener.generateShortCode:input_type -> online.gonlink.GenerateShortCodeRequest
	1,  // 3: online.gonlink.UrlShortener.generateShortCodeAccount:input_type -> online.gonlink.GenerateShortCodeAccountRequest
	7,  // 4: online.gonlink.UrlShortener.getOriginalUrl:input_type -> online.gonlink.GetOriginalUrlRequest
	9,  // 5: online.gonlink.UrlShortener.removeByID:input_type -> online.gonlink.RemoveUrlRequest
	11, // 6: online.gonlink.UrlShortener.updateByID:input_type -> online.gonlink.ShortCodeUpdateRequest
	13, // 7: online.gonlink.UrlShortener.checkExistShortCode:output_type -> online.gonlink.BaseGrpc
	13, // 8: online.gonlink.UrlShortener.checkNeedPasswordGetOriginalUrl:output_type -> online.gonlink.BaseGrpc
	13, // 9: online.gonlink.UrlShortener.generateShortCode:output_type -> online.gonlink.BaseGrpc
	13, // 10: online.gonlink.UrlShortener.generateShortCodeAccount:output_type -> online.gonlink.BaseGrpc
	13, // 11: online.gonlink.UrlShortener.getOriginalUrl:output_type -> online.gonlink.BaseGrpc
	13, // 12: online.gonlink.UrlShortener.removeByID:output_type -> online.gonlink.BaseGrpc
	13, // 13: online.gonlink.UrlShortener.updateByID:output_type -> online.gonlink.BaseGrpc
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_url_shortener_service_proto_init() }
func file_url_shortener_service_proto_init() {
	if File_url_shortener_service_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_url_shortener_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateShortCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateShortCodeAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateShortCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ShortCodeCheckExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ShortCodeCheckExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*OriginalUrlCheckNeedPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*OriginalUrlCheckNeedPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetOriginalUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetOriginalUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ShortCodeUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_shortener_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ShortCodeUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_url_shortener_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_url_shortener_service_proto_msgTypes[1].OneofWrappers = []any{}
	file_url_shortener_service_proto_msgTypes[7].OneofWrappers = []any{}
	file_url_shortener_service_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_url_shortener_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_url_shortener_service_proto_goTypes,
		DependencyIndexes: file_url_shortener_service_proto_depIdxs,
		MessageInfos:      file_url_shortener_service_proto_msgTypes,
	}.Build()
	File_url_shortener_service_proto = out.File
	file_url_shortener_service_proto_rawDesc = nil
	file_url_shortener_service_proto_goTypes = nil
	file_url_shortener_service_proto_depIdxs = nil
}
